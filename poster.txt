
THE PROJECT:
My little project was based around ciphertexts. When I was a kid I loved the idea of spies and secret codes so I thought it could be interesting to explore them in a bit more depth! My goal was to explore how a bunch of different ciphertexts worked and then go about figuring out how to implement them using Python. I then wanted to build an interface that enabled the sending of messages between people using these ciphers. In my initial proposal I also intended to try and develop a program to crack some of the simpler ciphers.

>>LINK TO PROPOSAL

WHAT I ACHIEVED:
Implementing the ciphers was actually good fun. I managed to implement the encoding and decoding of a Caesar cipher, Vignere cipher, Transposition cipher, a combination of the Vignere and Transposition ciphers, and my own version of a Feistel Network, utilising the previously implemented ciphers. These all had their own specific challenges in implementation and in as much each taught me something slightly different. These ciphers were brought together in a simple shell that allowed a user to encrypt, decrypt, and send and receive messages. The shell incorporates a simple database that stores messages and could easily be moved online. The ciphertexts are as secure as the user makes them, being able to choose both the method and the key for any encryption. 

WHAT I LEARNED:
The most obvious point of growth was in my knowledge of how ciphers work. Working through a bunch of different ones, I think the most interesting thing to me was the difference between confusion and diffusion, where they present themselves and where their individual weaknesses lie. It was also fun thinking about how I might go about cracking some of the simpler ciphers, given their flaws and knowledge of their implementation. The implementation of these ciphers was also a great learning experience. After understanding the idea of them, I decided to try and figure out how to implement them completely by myself, rather than researching possible techniques. This helped me gain full mastery over the ciphers and I am very glad I did it like that! During the implementation of the shell, I realised that I needed to make sure my interface couldn't be broken by a user. This led me on a bit of a journey into type safety and sanitising user inputs which was interesting and an unexpected learning curve. 

REFLECTION:
Although the main goal of my project was around the implementation of a couple of ciphers, I think the learning that came about as a side effect of that was the most powerful for me. This is in reference to two things. The first is the flaws and weaknesses of certain ciphers, which I noticed during implementation. Although I didn't end up getting time to implement a tool to crack some of the methods, it was stimulating to start to think in my mind how I might go about implementing such a tool based on the flaws and inherent weaknesses of the different ciphers. It might be something I do in my own time during the holidays! The other unexpected point of learning was in the implementation of the shell, mainly based around ensuring the interface couldn't be broken from user input. This mainly ended up being in regard to type safety but also different ways about handling certain errors that could be raised by lower level functions. Not the exact topic of my something awesome, but certainly security related!


EVIDENCE:
Don't believe me??? Fair enough. Visit my git repo:
https://github.com/zachjbrowning/cs6441-ciphers 


BLOG POSTS:

one sentence overview
link
